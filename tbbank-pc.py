import gspread
from oauth2client.service_account import ServiceAccountCredentials
from gtts import gTTS
from io import BytesIO
import os
import time
import sys
import requests
from time import sleep
from datetime import datetime, timedelta
from pystyle import Colors, Colorate
import platform
import shutil

# --- H√†m x√≥a s·∫°ch m√†n h√¨nh tr√™n m·ªçi thi·∫øt b·ªã ---
def clear_screen():
    try:
        if platform.system() == "Windows":
            os.system("cls")
        else:
            print("\033[2J\033[H", end="")  # X√≥a b·∫±ng ANSI escape tr√™n Unix
    except:
        print("\n" * 100)  # D·ª± ph√≤ng

clear_screen()

# Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng
def check_connection():
    try:
        response = requests.get("https://www.google.com.vn", timeout=3)
        if response.status_code != 200:
            raise Exception("Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá")
        print("ƒê√£ k·∫øt n·ªëi m·∫°ng th√†nh c√¥ng!")
    except:
        print("‚ùå Kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng ho·∫∑c k·∫øt n·ªëi kh√¥ng ·ªïn ƒë·ªãnh.")
        sys.exit()

# Ki·ªÉm tra ƒë√£ c√†i mpv ch∆∞a
def check_mpv():
    if not shutil.which("mpv"):
        print("‚ö†Ô∏è B·∫°n ch∆∞a c√†i 'mpv'! Vui l√≤ng c√†i ƒë·∫∑t:")
        print("‚Ä¢ Windows: https://mpv.io/installation/")
        print("‚Ä¢ Linux (Ubuntu): sudo apt install mpv")
        sys.exit()

check_connection()
check_mpv()

# H√†m banner
def banner():
    banner_text = f"""
‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë
‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïù‚ñë
‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë
‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë
‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñë
‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë
TOOL BY: LeAnhMinh - LAMDev              PHI√äN B·∫¢N : 1.0.0
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    """
    for X in banner_text:
        sys.stdout.write(X)
        sys.stdout.flush()
        sleep(0.00125)

os.system("cls" if os.name == "nt" else "clear")
banner()

# H√†m ph√°t √¢m thanh t·ª´ link
def play_sound_from_url(url):
    os.system(f"mpv --no-video {url}")

# H√†m ƒë·ªçc n·ªôi dung giao d·ªãch
def noi(transaction_time, so_tien, noidung):
    try:
        play_sound_from_url("https://tiengdong.com/wp-content/uploads/Tieng-tinh-tinh-www_tiengdong_com.mp3")
        time.sleep(1)

        if transaction_time:
            time_parts = transaction_time.split()
            time_str = time_parts[1] if len(time_parts) > 1 else ""
            hour, minute, _ = time_str.split(':')
            time_msg = f"{hour} gi·ªù {minute} ph√∫t"
        else:
            time_msg = "kh√¥ng x√°c ƒë·ªãnh th·ªùi gian"

        message = f"Giao d·ªãch th√†nh c√¥ng. ƒê√£ nh·∫≠n {so_tien} ƒë·ªìng v√†o l√∫c {time_msg}, n·ªôi dung: {noidung}"
        tts = gTTS(text=message, lang='vi')
        mp3_fp = BytesIO()
        tts.write_to_fp(mp3_fp)
        mp3_fp.seek(0)

        with open("tam.mp3", "wb") as f:
            f.write(mp3_fp.read())

        os.system("mpv --no-video tam.mp3")
        os.remove("tam.mp3")

    except Exception as e:
        print("‚ùå L·ªói ƒë·ªçc:", e)

# K·∫øt n·ªëi Google Sheet
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
client = gspread.authorize(creds)

sheet_url = 'https://docs.google.com/spreadsheets/d/1yjfFXVNjxd6Gdady8Dk5GugA3W5cB0uXCcu7Ymoi7AE/edit#gid=0'
sheet = client.open_by_url(sheet_url).sheet1

# ƒê·ªçc m√£ giao d·ªãch cu·ªëi c√πng
last_ma_gd = None
try:
    with open("LAMDev.txt", "r") as f:
        last_ma_gd = f.read().strip()
except FileNotFoundError:
    print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file LAMDev.txt, s·∫Ω b·∫Øt ƒë·∫ßu t·ª´ ƒë·∫ßu.")

print("üîÑ ƒêang theo d√µi giao d·ªãch m·ªõi...")

# V√≤ng l·∫∑p ki·ªÉm tra
while True:
    try:
        data = sheet.get_all_records(head=2)
        for row in reversed(data):
            if row.get('Lo·∫°i GD') == 'Giao d·ªãch ƒë·∫øn' and row.get('Tr·∫°ng th√°i') == 'Th√†nh c√¥ng':
                ma_gd = row.get('M√£ giao d·ªãch')
                transaction_time = row.get('Th·ªùi gian t·∫°o')
                noidung = row.get('N·ªôi dung')
                so_tien = row.get('S·ªë ti·ªÅn (VND)')

                if ma_gd and ma_gd != last_ma_gd:
                    print(f"üîî Giao d·ªãch m·ªõi: {so_tien} | {transaction_time} | N·ªôi dung: {noidung}")
                    noi(transaction_time, so_tien, noidung)
                    last_ma_gd = ma_gd
                    with open("LAMDev.txt", "w") as f:
                        f.write(ma_gd)
        time.sleep(5)
    except Exception as e:
        print("‚ùå L·ªói trong qu√° tr√¨nh ki·ªÉm tra:", e)
        time.sleep(5)
